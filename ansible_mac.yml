---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Ensuring homebrew binary is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: Adding custom homebrew repos
      community.general.homebrew_tap:
        name: [
          adoptopenjdk/openjdk,
          fishtown-analytics/dbt,
          heroku/brew,
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
        ]

    - name: Installing main packages using brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - android-sdk
        - visual-studio-code
        - vlc
        - postman
        - notion
        - rancher-desktop
        - zoom
        - android-studio
        - docker
        - google-chrome
        - google-cloud-sdk
        - iterm2
        - slack
        - sublime-text

    - name: Install packages using homebrew
      community.general.homebrew:
        name: [
          'autoconf',
          'automake',
          'argocd',
          'aws-iam-authenticator',
          'awscli',
          'consul-template',
          'desk',
          'bat',
          'node',
          'jq',
          'lima',          
          'coreutils',
          'curl',
          'direnv',
          'dnsmasq',
          'fzf',
          'gh',
          'go',
          'git',
          'go-task',
          'golangci-lint',
          'gnu-time',
          'gpg',
          'helm',
          'heroku',
          'htop',
          'imagemagick@6',
          'kind',
          'k3d',
          'kubectx',
          'kubens',
          'kubernetes-cli',
          'kubernetes-helm',
          'kubeseal',
          'libtool',
          'libxslt',
          'libyaml',
          'make',
          'minikube',
          'localstack',
          'openssl',
          'openjdk',
          'perl',
          'postgresql',
          'pyenv',
          'powerlevel10k',
          'python@3.9',
          'python@3.10',
          'rcm',
          'readline',
          'redis',
          'terraform',
          'tfenv',
          'tmux',
          'trivy',
          'tree',
          'unzip',
          'vim',
          'vault',
          'watchman',
          'xz',
          'yarn',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835 # xcode

    - name: Obtain path to SSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: Create my default ZSH config
      template:
        src: templates/.zshrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: Create my VSCode config
      template:
        src: templates/vscode-settings.json.j2
        dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: Create my VSCode key shortcuts  config
      template:
        src: templates/vscode-keys.json.j2
        dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/keybindings.json
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    # Add something which ensures path is set here
    - name: Install my VSCode extensions
      shell: code --install-extension {{ item }}
      with_items:
        - apollographql.vscode-apollo
        - eamodio.gitlens
        - Boto3typed.boto3-ide
        - golang.go
        - formulahendry.code-runner
        - ecmel.vscode-html-css
        - caarlos0.language-prometheus
        - hashicorp.terraform
        - AquaSecurityOfficial.trivy-vulnerability-scanner
        - GitHub.vscode-pull-request-github
        - DavidAnson.vscode-markdownlint
        - ms-vscode-remote.vscode-remote-extensionpack
        - ms-vscode.vscode-typescript-tslint-plugin
        - msjsdiag.debugger-for-chrome
        - richie5um2.vscode-sort-json
        - Tyriar.sort-lines
        - ms-azuretools.vscode-docker
        - ms-vscode-remote.remote-ssh
        - ms-vscode.cpptools-themes
        - ms-kubernetes-tools.vscode-kubernetes-tools
        - ms-python.python
        - redhat.ansible
        - tomaciazek.ansible
        - kiteco.kite
        - mhutchie.git-graph
        - vscodevim.vim
        - wholroyd.jinja
        - streetsidesoftware.code-spell-checker
        - fabiospampinato.vscode-todo-plus

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - python
        - nodejs
        - golang

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.10.0
        asdf global python 3.10.0
        pip3 install ansible
        asdf reshim python

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs 16.4.2
        asdf global nodejs 16.4.2
        
    - name: re-generate bins now we've installed some yarn packages
      shell: asdf reshim nodejs
